{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\31622\\\\Documents\\\\React Apps\\\\flavorology\\\\src\\\\views\\\\RecipeOverview\\\\RecipeOverview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport { AlterRecipe, APIHandler, Modal, RecipeOverviewHeader } from 'config/C4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst convertQuantityType = quantityType => {\n  switch (quantityType) {\n    case \"piece\":\n      return \"\";\n\n    case \"gram\":\n      return \"gram\";\n\n    case \"teaspoon\":\n      return \"theelepel\";\n\n    default:\n      return null;\n  }\n};\n\nconst generateListItemString = _ref => {\n  let {\n    name,\n    quantity,\n    quantityType\n  } = _ref;\n  const quantityTypeConverted = convertQuantityType(quantityType);\n\n  if (quantityTypeConverted) {\n    return `${quantity} ${quantityTypeConverted} ${name}`;\n  }\n\n  return `${quantity} ${name}`;\n};\n\nconst getRecipe = async (id, callback) => {\n  const recipe = await APIHandler.getRecipe(id);\n  callback(recipe);\n};\n\nconst RecipeOverview = () => {\n  _s();\n\n  const [recipe, setRecipe] = useState({});\n  const [listItems, setListItems] = useState([]);\n  const [modal, openModal] = useState(false); // all ingredients are added to shoppinglist by default\n  // useEffect(() => {\n  //   const listOfIngredients = [];\n  //   ingredients.map((item) => {\n  //     listOfIngredients.push(item);\n  //   });\n  //   setListItems(listOfIngredients);\n  // }, [ingredients, setListItems]);\n\n  useEffect(() => {\n    const {\n      pathname\n    } = window.location;\n    const recipeId = pathname.split('/recept/')[1];\n    getRecipe(recipeId, setRecipe);\n  }, [setRecipe]); // function to add or remove item from shoppinglist\n\n  const changeListItems = e => {\n    const {\n      name\n    } = e.target;\n    const itemInList = listItems.some(listItem => listItem.name === name);\n\n    if (itemInList) {\n      const index = listItems.findIndex(listItem => listItem.name === name);\n      const updatedListItems = listItems;\n      updatedListItems.splice(index, 1);\n      setListItems(updatedListItems);\n    } else {\n      const updatedListItems = listItems;\n      const itemToAdd = ingredients.filter(ingredient => ingredient.name === name);\n      updatedListItems.push(itemToAdd[0]);\n      setListItems(updatedListItems);\n    }\n  }; // function to check if checkbox is checked\n\n\n  const itemIsInList = item => {\n    if (listItems.length > 0) {\n      const itemInList = listItems.filter(listItem => listItem.name === item.name);\n      return itemInList.length > 0;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipeOverview\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeOverview, \"KCC8EGTJP3KwSIHE7sVYzJGVcNU=\");\n\n_c = RecipeOverview;\nexport default RecipeOverview;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeOverview\");","map":{"version":3,"names":["React","useEffect","useState","FontAwesomeIcon","faPen","AlterRecipe","APIHandler","Modal","RecipeOverviewHeader","convertQuantityType","quantityType","generateListItemString","name","quantity","quantityTypeConverted","getRecipe","id","callback","recipe","RecipeOverview","setRecipe","listItems","setListItems","modal","openModal","pathname","window","location","recipeId","split","changeListItems","e","target","itemInList","some","listItem","index","findIndex","updatedListItems","splice","itemToAdd","ingredients","filter","ingredient","push","itemIsInList","item","length"],"sources":["C:/Users/31622/Documents/React Apps/flavorology/src/views/RecipeOverview/RecipeOverview.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { AlterRecipe, APIHandler, Modal, RecipeOverviewHeader } from 'config/C4';\r\n\r\nconst convertQuantityType = (quantityType) => {\r\n  switch (quantityType) {\r\n    case \"piece\":\r\n      return \"\";\r\n    case \"gram\":\r\n      return \"gram\";\r\n    case \"teaspoon\":\r\n      return \"theelepel\";\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst generateListItemString = ({ name, quantity, quantityType }) => {\r\n  const quantityTypeConverted = convertQuantityType(quantityType);\r\n  if (quantityTypeConverted) {\r\n    return `${quantity} ${quantityTypeConverted} ${name}`;\r\n  }\r\n\r\n  return `${quantity} ${name}`;\r\n};\r\n\r\nconst getRecipe = async (id, callback) => {\r\n  const recipe = await APIHandler.getRecipe(id);\r\n  callback(recipe);\r\n}\r\n\r\nconst RecipeOverview = () => {\r\n  const [recipe, setRecipe] = useState({});\r\n\r\n  const [listItems, setListItems] = useState([]);\r\n  const [ modal, openModal ] = useState(false);\r\n\r\n  // all ingredients are added to shoppinglist by default\r\n  // useEffect(() => {\r\n  //   const listOfIngredients = [];\r\n  //   ingredients.map((item) => {\r\n  //     listOfIngredients.push(item);\r\n  //   });\r\n  //   setListItems(listOfIngredients);\r\n  // }, [ingredients, setListItems]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const { pathname } = window.location;\r\n    const recipeId = pathname.split('/recept/')[1];\r\n    getRecipe(recipeId, setRecipe);\r\n  }, [setRecipe]);\r\n\r\n  // function to add or remove item from shoppinglist\r\n  const changeListItems = (e) => {\r\n    const { name } = e.target;\r\n    const itemInList = listItems.some((listItem) => listItem.name === name);\r\n    if (itemInList) {\r\n      const index = listItems.findIndex((listItem) => listItem.name === name);\r\n      const updatedListItems = listItems;\r\n      updatedListItems.splice(index, 1);\r\n      setListItems(updatedListItems);\r\n    } else {\r\n      const updatedListItems = listItems;\r\n      const itemToAdd = ingredients.filter(\r\n        (ingredient) => ingredient.name === name\r\n      );\r\n      updatedListItems.push(itemToAdd[0]);\r\n      setListItems(updatedListItems);\r\n    }\r\n  };\r\n\r\n  // function to check if checkbox is checked\r\n  const itemIsInList = (item) => {\r\n    if (listItems.length > 0) {\r\n      const itemInList = listItems.filter(\r\n        (listItem) => listItem.name === item.name\r\n      );\r\n      return itemInList.length > 0;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipeOverview\">\r\n      {/* <RecipeOverviewHeader item={recipe} />\r\n      <section className=\"recipeOverview__content\">\r\n        <div className=\"recipeOverview__content--ingredients\">\r\n          <h1 className=\"sectionTitle\">IngrediÃ«nten</h1>\r\n          <ul>\r\n            {recipe && ingredients && ingredients.map((item, i) => (\r\n              <li key={i}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={item.name}\r\n                  id={generateListItemString(item)}\r\n                  onChange={changeListItems}\r\n                  checked={itemIsInList(item)}\r\n                />\r\n                \r\n                <span className=\"quantity\">\r\n                    {item.quantity} {convertQuantityType(item.quantityType)}\r\n                  </span>\r\n                  <span className=\"name\">&nbsp;{item.name}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button>Toevoegen aan boodschappenlijstje</button>\r\n        </div>\r\n        <div className=\"recipeOverview__content--preperation-steps\">\r\n          <h1>Let's get cooking</h1>\r\n          {recipe && preperationSteps && preperationSteps.map((item, i) => (\r\n            <div key={i} className=\"step\">\r\n              <div className=\"number\">\r\n                <span>{i + 1}</span>\r\n              </div>\r\n              <p>{item}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n      <button className=\"alterRecipeButton\" onClick={() => openModal(!modal)}>\r\n        <FontAwesomeIcon icon={faPen} />\r\n      </button> */}\r\n\r\n      {/* {modal && (\r\n        <Modal modalIsOpen={openModal}>\r\n          <AlterRecipe recipe={recipe} modalIsOpen={openModal} />\r\n        </Modal>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeOverview;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}