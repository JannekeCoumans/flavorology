{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\31622\\\\Documents\\\\React Apps\\\\flavorology\\\\src\\\\views\\\\RecipeOverview\\\\RecipeOverview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport { AlterRecipe, Modal, RecipeOverviewHeader } from 'config/C4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst convertQuantityType = quantityType => {\n  switch (quantityType) {\n    case \"piece\":\n      return \"\";\n\n    case \"gram\":\n      return \"gram\";\n\n    case \"teaspoon\":\n      return \"theelepel\";\n\n    default:\n      return null;\n  }\n};\n\nconst generateListItemString = _ref => {\n  let {\n    name,\n    quantity,\n    quantityType\n  } = _ref;\n  const quantityTypeConverted = convertQuantityType(quantityType);\n\n  if (quantityTypeConverted) {\n    return `${quantity} ${quantityTypeConverted} ${name}`;\n  }\n\n  return `${quantity} ${name}`;\n};\n\nconst RecipeOverview = () => {\n  _s();\n\n  const [recipe, setRecipe] = useState({});\n  const {\n    name,\n    recipeName,\n    quantityPerson,\n    duration,\n    labelTypeDish,\n    kitchen,\n    healthy,\n    image,\n    ingredients,\n    preperationSteps\n  } = recipe;\n  const [listItems, setListItems] = useState([]);\n  const [modal, openModal] = useState(false); // all ingredients are added to shoppinglist by default\n  // useEffect(() => {\n  //   const listOfIngredients = [];\n  //   ingredients.map((item) => {\n  //     listOfIngredients.push(item);\n  //   });\n  //   setListItems(listOfIngredients);\n  // }, [ingredients, setListItems]);\n\n  useEffect(() => {\n    const {\n      pathname\n    } = window.location;\n    setRecipe(pathname.split('/recept/')[1]);\n  }, [setRecipe]); // function to add or remove item from shoppinglist\n\n  const changeListItems = e => {\n    const {\n      name\n    } = e.target;\n    const itemInList = listItems.some(listItem => listItem.name === name);\n\n    if (itemInList) {\n      const index = listItems.findIndex(listItem => listItem.name === name);\n      const updatedListItems = listItems;\n      updatedListItems.splice(index, 1);\n      setListItems(updatedListItems);\n    } else {\n      const updatedListItems = listItems;\n      const itemToAdd = ingredients.filter(ingredient => ingredient.name === name);\n      updatedListItems.push(itemToAdd[0]);\n      setListItems(updatedListItems);\n    }\n  }; // function to check if checkbox is checked\n\n\n  const itemIsInList = item => {\n    if (listItems.length > 0) {\n      const itemInList = listItems.filter(listItem => listItem.name === item.name);\n      return itemInList.length > 0;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipeOverview\",\n    children: [/*#__PURE__*/_jsxDEV(RecipeOverviewHeader, {\n      item: recipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"recipeOverview__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipeOverview__content--ingredients\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"sectionTitle\",\n          children: \"Ingredi\\xEBnten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recipe && recipe.ingredients && recipe.ingredients.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"quantity\",\n              children: [item.quantity, \" \", convertQuantityType(item.quantityType)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name\",\n              children: [\"\\xA0\", item.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Toevoegen aan boodschappenlijstje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipeOverview__content--preperation-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Let's get cooking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), preperationSteps.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"alterRecipeButton\",\n      onClick: () => openModal(!modal),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), modal && /*#__PURE__*/_jsxDEV(Modal, {\n      modalIsOpen: openModal,\n      children: /*#__PURE__*/_jsxDEV(AlterRecipe, {\n        recipe: recipe,\n        modalIsOpen: openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeOverview, \"KCC8EGTJP3KwSIHE7sVYzJGVcNU=\");\n\n_c = RecipeOverview;\nexport default RecipeOverview;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeOverview\");","map":{"version":3,"names":["React","useEffect","useState","FontAwesomeIcon","faPen","AlterRecipe","Modal","RecipeOverviewHeader","convertQuantityType","quantityType","generateListItemString","name","quantity","quantityTypeConverted","RecipeOverview","recipe","setRecipe","recipeName","quantityPerson","duration","labelTypeDish","kitchen","healthy","image","ingredients","preperationSteps","listItems","setListItems","modal","openModal","pathname","window","location","split","changeListItems","e","target","itemInList","some","listItem","index","findIndex","updatedListItems","splice","itemToAdd","filter","ingredient","push","itemIsInList","item","length","map","i"],"sources":["C:/Users/31622/Documents/React Apps/flavorology/src/views/RecipeOverview/RecipeOverview.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { AlterRecipe, Modal, RecipeOverviewHeader } from 'config/C4';\r\n\r\nconst convertQuantityType = (quantityType) => {\r\n  switch (quantityType) {\r\n    case \"piece\":\r\n      return \"\";\r\n    case \"gram\":\r\n      return \"gram\";\r\n    case \"teaspoon\":\r\n      return \"theelepel\";\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst generateListItemString = ({ name, quantity, quantityType }) => {\r\n  const quantityTypeConverted = convertQuantityType(quantityType);\r\n  if (quantityTypeConverted) {\r\n    return `${quantity} ${quantityTypeConverted} ${name}`;\r\n  }\r\n\r\n  return `${quantity} ${name}`;\r\n};\r\n\r\n\r\n\r\nconst RecipeOverview = () => {\r\n  const [recipe, setRecipe] = useState({});\r\n\r\n  const {\r\n    name,\r\n    recipeName,\r\n    quantityPerson,\r\n    duration,\r\n    labelTypeDish,\r\n    kitchen,\r\n    healthy,\r\n    image,\r\n    ingredients,\r\n    preperationSteps,\r\n  } = recipe;\r\n\r\n  const [listItems, setListItems] = useState([]);\r\n  const [ modal, openModal ] = useState(false);\r\n\r\n  // all ingredients are added to shoppinglist by default\r\n  // useEffect(() => {\r\n  //   const listOfIngredients = [];\r\n  //   ingredients.map((item) => {\r\n  //     listOfIngredients.push(item);\r\n  //   });\r\n  //   setListItems(listOfIngredients);\r\n  // }, [ingredients, setListItems]);\r\n\r\n  useEffect(() => {\r\n    const { pathname } = window.location;\r\n    setRecipe(pathname.split('/recept/')[1]);\r\n  }, [setRecipe]);\r\n\r\n  // function to add or remove item from shoppinglist\r\n  const changeListItems = (e) => {\r\n    const { name } = e.target;\r\n    const itemInList = listItems.some((listItem) => listItem.name === name);\r\n    if (itemInList) {\r\n      const index = listItems.findIndex((listItem) => listItem.name === name);\r\n      const updatedListItems = listItems;\r\n      updatedListItems.splice(index, 1);\r\n      setListItems(updatedListItems);\r\n    } else {\r\n      const updatedListItems = listItems;\r\n      const itemToAdd = ingredients.filter(\r\n        (ingredient) => ingredient.name === name\r\n      );\r\n      updatedListItems.push(itemToAdd[0]);\r\n      setListItems(updatedListItems);\r\n    }\r\n  };\r\n\r\n  // function to check if checkbox is checked\r\n  const itemIsInList = (item) => {\r\n    if (listItems.length > 0) {\r\n      const itemInList = listItems.filter(\r\n        (listItem) => listItem.name === item.name\r\n      );\r\n      return itemInList.length > 0;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipeOverview\">\r\n      <RecipeOverviewHeader item={recipe} />\r\n      <section className=\"recipeOverview__content\">\r\n        <div className=\"recipeOverview__content--ingredients\">\r\n          <h1 className=\"sectionTitle\">Ingrediënten</h1>\r\n          <ul>\r\n            {recipe && recipe.ingredients && recipe.ingredients.map((item, i) => (\r\n              <li key={i}>\r\n                {/* <input\r\n                  type=\"checkbox\"\r\n                  name={item.name}\r\n                  id={generateListItemString(item)}\r\n                  onChange={changeListItems}\r\n                  checked={itemIsInList(item)}\r\n                /> */}\r\n                \r\n                <span className=\"quantity\">\r\n                    {item.quantity} {convertQuantityType(item.quantityType)}\r\n                  </span>\r\n                  <span className=\"name\">&nbsp;{item.name}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button>Toevoegen aan boodschappenlijstje</button>\r\n        </div>\r\n        <div className=\"recipeOverview__content--preperation-steps\">\r\n          <h1>Let's get cooking</h1>\r\n          {preperationSteps.map((item, i) => (\r\n            <div key={i} className=\"step\">\r\n              <div className=\"number\">\r\n                <span>{i + 1}</span>\r\n              </div>\r\n              <p>{item}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n      <button className=\"alterRecipeButton\" onClick={() => openModal(!modal)}>\r\n        <FontAwesomeIcon icon={faPen} />\r\n      </button>\r\n\r\n      {modal && (\r\n        <Modal modalIsOpen={openModal}>\r\n          <AlterRecipe recipe={recipe} modalIsOpen={openModal} />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeOverview;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}