{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\31622\\\\Documents\\\\React Apps\\\\flavorology\\\\src\\\\views\\\\RecipeOverview\\\\RecipeOverview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport { AlterRecipe, Modal, RecipeOverviewHeader } from 'config/C4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst convertQuantityType = quantityType => {\n  switch (quantityType) {\n    case \"piece\":\n      return \"\";\n\n    case \"gram\":\n      return \"gram\";\n\n    case \"teaspoon\":\n      return \"theelepel\";\n\n    default:\n      return null;\n  }\n};\n\nconst generateListItemString = _ref => {\n  let {\n    name,\n    quantity,\n    quantityType\n  } = _ref;\n  const quantityTypeConverted = convertQuantityType(quantityType);\n\n  if (quantityTypeConverted) {\n    return `${quantity} ${quantityTypeConverted} ${name}`;\n  }\n\n  return `${quantity} ${name}`;\n};\n\nconst RecipeOverview = () => {\n  _s();\n\n  const [recipe, setRecipe] = useState({\n    name: \"Pasta met gehakt, groenten en tomatensaus\",\n    quantityPerson: 4,\n    duration: 90,\n    labelTypeDish: \"meat\",\n    kitchen: \"italian\",\n    healthy: false,\n    image: \"https://static.ah.nl/static/recepten/img_RAM_PRD137625_1224x900_JPG.jpg\",\n    ingredients: [{\n      name: \"paprika\",\n      quantity: \"1\",\n      quantityType: \"piece\",\n      ingredientType: \"vegetable\"\n    }, {\n      name: \"courgette\",\n      quantity: \"1\",\n      quantityType: \"piece\",\n      ingredientType: \"vegetable\"\n    }, {\n      name: \"ui\",\n      quantity: \"1\",\n      quantityType: \"piece\",\n      ingredientType: \"vegetable\"\n    }, {\n      name: \"wortels\",\n      quantity: \"3\",\n      quantityType: \"piece\",\n      ingredientType: \"vegetable\"\n    }, {\n      name: \"tomatenpuree\",\n      quantity: \"70\",\n      quantityType: \"gram\",\n      ingredientType: \"sauce\"\n    }, {\n      name: \"tomatenblokjes\",\n      quantity: \"400\",\n      quantityType: \"gram\",\n      ingredientType: \"sauce\"\n    }, {\n      name: \"pasta\",\n      quantity: \"500\",\n      quantityType: \"gram\",\n      ingredientType: \"doughware\"\n    }, {\n      name: \"geraspte kaas\",\n      quantity: \"200\",\n      quantityType: \"gram\",\n      ingredientType: \"dairy\"\n    }, {\n      name: \"oregano\",\n      quantity: \"1\",\n      quantityType: \"teaspoon\",\n      ingredientType: \"spices\"\n    }, {\n      name: \"gehakt\",\n      quantity: \"500\",\n      quantityType: \"gram\",\n      ingredientType: \"meat\"\n    }],\n    preperationSteps: [\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra justo nec ultrices dui sapien eget mi proin. Proin gravida hendrerit lectus a. Mi quis hendrerit dolor magna eget est lorem.\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra orci sagittis eu volutpat odio facilisis mauris sit. Odio facilisis mauris sit amet massa vitae.\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ac tortor dignissim convallis aenean et tortor.\"]\n  });\n  const {\n    name,\n    quantityPerson,\n    duration,\n    labelTypeDish,\n    kitchen,\n    healthy,\n    image,\n    ingredients,\n    preperationSteps\n  } = recipe;\n  const [listItems, setListItems] = useState([]);\n  const [modal, openModal] = useState(false); // all ingredients are added to shoppinglist by default\n\n  useEffect(() => {\n    const listOfIngredients = [];\n    ingredients.map(item => {\n      listOfIngredients.push(item);\n    });\n    setListItems(listOfIngredients);\n  }, [ingredients, setListItems]); // function to add or remove item from shoppinglist\n\n  const changeListItems = e => {\n    const {\n      name\n    } = e.target;\n    const itemInList = listItems.some(listItem => listItem.name === name);\n\n    if (itemInList) {\n      const index = listItems.findIndex(listItem => listItem.name === name);\n      const updatedListItems = listItems;\n      updatedListItems.splice(index, 1);\n      setListItems(updatedListItems);\n    } else {\n      const updatedListItems = listItems;\n      const itemToAdd = ingredients.filter(ingredient => ingredient.name === name);\n      updatedListItems.push(itemToAdd[0]);\n      setListItems(updatedListItems);\n    }\n  }; // function to check if checkbox is checked\n\n\n  const itemIsInList = item => {\n    if (listItems.length > 0) {\n      const itemInList = listItems.filter(listItem => listItem.name === item.name);\n      return itemInList.length > 0;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipeOverview\",\n    children: [/*#__PURE__*/_jsxDEV(RecipeOverviewHeader, {\n      item: recipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"recipeOverview__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipeOverview__content--ingredients\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"sectionTitle\",\n          children: \"Ingredi\\xEBnten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ingredients.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"quantity\",\n              children: [item.quantity, \" \", convertQuantityType(item.quantityType)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name\",\n              children: [\"\\xA0\", item.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Toevoegen aan boodschappenlijstje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipeOverview__content--preperation-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Let's get cooking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), preperationSteps.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"alterRecipe\",\n      onClick: () => openModal(!modal),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), modal && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(AlterRecipe, {\n        recipe: recipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeOverview, \"3yArFqu+rYvMIjOEH8PLavZHHkQ=\");\n\n_c = RecipeOverview;\nexport default RecipeOverview;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeOverview\");","map":{"version":3,"names":["React","useEffect","useState","FontAwesomeIcon","faPen","AlterRecipe","Modal","RecipeOverviewHeader","convertQuantityType","quantityType","generateListItemString","name","quantity","quantityTypeConverted","RecipeOverview","recipe","setRecipe","quantityPerson","duration","labelTypeDish","kitchen","healthy","image","ingredients","ingredientType","preperationSteps","listItems","setListItems","modal","openModal","listOfIngredients","map","item","push","changeListItems","e","target","itemInList","some","listItem","index","findIndex","updatedListItems","splice","itemToAdd","filter","ingredient","itemIsInList","length","i"],"sources":["C:/Users/31622/Documents/React Apps/flavorology/src/views/RecipeOverview/RecipeOverview.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { AlterRecipe, Modal, RecipeOverviewHeader } from 'config/C4';\r\n\r\nconst convertQuantityType = (quantityType) => {\r\n  switch (quantityType) {\r\n    case \"piece\":\r\n      return \"\";\r\n    case \"gram\":\r\n      return \"gram\";\r\n    case \"teaspoon\":\r\n      return \"theelepel\";\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst generateListItemString = ({ name, quantity, quantityType }) => {\r\n  const quantityTypeConverted = convertQuantityType(quantityType);\r\n  if (quantityTypeConverted) {\r\n    return `${quantity} ${quantityTypeConverted} ${name}`;\r\n  }\r\n\r\n  return `${quantity} ${name}`;\r\n};\r\n\r\n\r\n\r\nconst RecipeOverview = () => {\r\n  const [recipe, setRecipe] = useState({\r\n    name: \"Pasta met gehakt, groenten en tomatensaus\",\r\n    quantityPerson: 4,\r\n    duration: 90,\r\n    labelTypeDish: \"meat\",\r\n    kitchen: \"italian\",\r\n    healthy: false,\r\n    image:\r\n      \"https://static.ah.nl/static/recepten/img_RAM_PRD137625_1224x900_JPG.jpg\",\r\n    ingredients: [\r\n      {\r\n        name: \"paprika\",\r\n        quantity: \"1\",\r\n        quantityType: \"piece\",\r\n        ingredientType: \"vegetable\",\r\n      },\r\n      {\r\n        name: \"courgette\",\r\n        quantity: \"1\",\r\n        quantityType: \"piece\",\r\n        ingredientType: \"vegetable\",\r\n      },\r\n      {\r\n        name: \"ui\",\r\n        quantity: \"1\",\r\n        quantityType: \"piece\",\r\n        ingredientType: \"vegetable\",\r\n      },\r\n      {\r\n        name: \"wortels\",\r\n        quantity: \"3\",\r\n        quantityType: \"piece\",\r\n        ingredientType: \"vegetable\",\r\n      },\r\n      {\r\n        name: \"tomatenpuree\",\r\n        quantity: \"70\",\r\n        quantityType: \"gram\",\r\n        ingredientType: \"sauce\",\r\n      },\r\n      {\r\n        name: \"tomatenblokjes\",\r\n        quantity: \"400\",\r\n        quantityType: \"gram\",\r\n        ingredientType: \"sauce\",\r\n      },\r\n      {\r\n        name: \"pasta\",\r\n        quantity: \"500\",\r\n        quantityType: \"gram\",\r\n        ingredientType: \"doughware\",\r\n      },\r\n      {\r\n        name: \"geraspte kaas\",\r\n        quantity: \"200\",\r\n        quantityType: \"gram\",\r\n        ingredientType: \"dairy\",\r\n      },\r\n      {\r\n        name: \"oregano\",\r\n        quantity: \"1\",\r\n        quantityType: \"teaspoon\",\r\n        ingredientType: \"spices\",\r\n      },\r\n      {\r\n        name: \"gehakt\",\r\n        quantity: \"500\",\r\n        quantityType: \"gram\",\r\n        ingredientType: \"meat\",\r\n      },\r\n    ],\r\n    preperationSteps: [\r\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra justo nec ultrices dui sapien eget mi proin. Proin gravida hendrerit lectus a. Mi quis hendrerit dolor magna eget est lorem.\",\r\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Viverra orci sagittis eu volutpat odio facilisis mauris sit. Odio facilisis mauris sit amet massa vitae.\",\r\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ac tortor dignissim convallis aenean et tortor.\",\r\n    ],\r\n  });\r\n\r\n  const {\r\n    name,\r\n    quantityPerson,\r\n    duration,\r\n    labelTypeDish,\r\n    kitchen,\r\n    healthy,\r\n    image,\r\n    ingredients,\r\n    preperationSteps,\r\n  } = recipe;\r\n\r\n  const [listItems, setListItems] = useState([]);\r\n  const [ modal, openModal ] = useState(false);\r\n\r\n  // all ingredients are added to shoppinglist by default\r\n  useEffect(() => {\r\n    const listOfIngredients = [];\r\n    ingredients.map((item) => {\r\n      listOfIngredients.push(item);\r\n    });\r\n    setListItems(listOfIngredients);\r\n  }, [ingredients, setListItems]);\r\n\r\n  // function to add or remove item from shoppinglist\r\n  const changeListItems = (e) => {\r\n    const { name } = e.target;\r\n    const itemInList = listItems.some((listItem) => listItem.name === name);\r\n    if (itemInList) {\r\n      const index = listItems.findIndex((listItem) => listItem.name === name);\r\n      const updatedListItems = listItems;\r\n      updatedListItems.splice(index, 1);\r\n      setListItems(updatedListItems);\r\n    } else {\r\n      const updatedListItems = listItems;\r\n      const itemToAdd = ingredients.filter(\r\n        (ingredient) => ingredient.name === name\r\n      );\r\n      updatedListItems.push(itemToAdd[0]);\r\n      setListItems(updatedListItems);\r\n    }\r\n  };\r\n\r\n  // function to check if checkbox is checked\r\n  const itemIsInList = (item) => {\r\n    if (listItems.length > 0) {\r\n      const itemInList = listItems.filter(\r\n        (listItem) => listItem.name === item.name\r\n      );\r\n      return itemInList.length > 0;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipeOverview\">\r\n      <RecipeOverviewHeader item={recipe} />\r\n      <section className=\"recipeOverview__content\">\r\n        <div className=\"recipeOverview__content--ingredients\">\r\n          <h1 className=\"sectionTitle\">Ingrediënten</h1>\r\n          <ul>\r\n            {ingredients.map((item, i) => (\r\n              <li key={i}>\r\n                {/* <input\r\n                  type=\"checkbox\"\r\n                  name={item.name}\r\n                  id={generateListItemString(item)}\r\n                  onChange={changeListItems}\r\n                  checked={itemIsInList(item)}\r\n                /> */}\r\n                \r\n                <span className=\"quantity\">\r\n                    {item.quantity} {convertQuantityType(item.quantityType)}\r\n                  </span>\r\n                  <span className=\"name\">&nbsp;{item.name}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button>Toevoegen aan boodschappenlijstje</button>\r\n        </div>\r\n        <div className=\"recipeOverview__content--preperation-steps\">\r\n          <h1>Let's get cooking</h1>\r\n          {preperationSteps.map((item, i) => (\r\n            <div key={i} className=\"step\">\r\n              <div className=\"number\">\r\n                <span>{i + 1}</span>\r\n              </div>\r\n              <p>{item}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n      <button className=\"alterRecipe\" onClick={() => openModal(!modal)}>\r\n        <FontAwesomeIcon icon={faPen} />\r\n      </button>\r\n\r\n      {modal && (\r\n        <Modal>\r\n          <AlterRecipe recipe={recipe} />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeOverview;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}